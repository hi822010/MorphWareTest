--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v89=v5(v82,v19);v19=nil;return v89;else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/(2^(v32-(2 -1))))%(((1642 -(1523 + 114)) -3)^(((v33-(1 -(877 -(282 + 595)))) -(v32-(2 -1))) + (620 -(555 + 64)))) ;return v83-(v83%(932 -(857 + 74))) ;else local v84=(570 -(330 + 37 + 201))^(v32-(928 -(214 + 713))) ;return (((v31%(v84 + v84))>=v84) and (1 + 0)) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0;local v36;local v37;while true do if (v35==(1 -0)) then return (v37 * ((1295 + 26) -(68 + 997))) + v36 ;end if (v35==(1270 -(226 + 1044))) then v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + (8 -6) ;v35=118 -(32 + 85) ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + 1 + 2 );v18=v18 + 4 ;return (v41 * (16778173 -(892 + 65))) + (v40 * (156337 -90801)) + (v39 * (472 -(395 -179))) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=351 -((878 -(368 + 423)) + (826 -563)) ;local v45=(v20(v43,(199 -(10 + 8)) -(67 + (434 -321)) ,15 + (447 -(416 + 26)) ) * ((4 -2)^(24 + 8))) + v42 ;local v46=v20(v43,83 -62 ,31);local v47=((v20(v43,984 -(802 + 150) )==(2 -1)) and  -((3 -2) -0)) or (1 + 0) ;if (v46==(997 -(393 + 522 + 82))) then if (v45==(0 -0)) then return v47 * ((0 -0) + 0) ;else v46=1 -0 ;v44=1187 -(1069 + 118) ;end elseif (v46==2047) then return ((v45==(0 -0)) and (v47 * (1/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(178 + (1283 -(145 + 293))) ) * (v44 + (v45/((3 -(431 -(44 + 386)))^(52 + 0)))) ;end local function v25(v48) local v49;if  not v48 then local v85=1486 -(998 + (1626 -(116 + 1022))) ;while true do if (v85==(0 + 0)) then v48=v23();if (v48==(0 + (0 -0))) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -1 );v18=v18 + v48 ;local v50={};for v65=773 -(118 + 83 + 571) , #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0 + 0 ;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v67=(function() return 0 + 0 ;end)();while true do if (v67~=1) then else if (v51==(1 -0)) then local v94=(function() return 0;end)();while true do if (v94~=1) then else v58=(function() return {};end)();for v107= #"{",v57 do local v108=(function() return 1262 -(1091 + 171) ;end)();local v109=(function() return;end)();local v110=(function() return;end)();local v111=(function() return;end)();while true do if (v108==1) then v111=(function() return nil;end)();while true do if (v109~=(0 + 0)) then else local v239=(function() return 0;end)();local v240=(function() return;end)();while true do if (v239==(0 -0)) then v240=(function() return 0;end)();while true do if (v240==(3 -2)) then v109=(function() return 1;end)();break;end if (v240~=0) then else v110=(function() return v21();end)();v111=(function() return nil;end)();v240=(function() return 375 -(123 + 251) ;end)();end end break;end end end if (v109==(4 -3)) then if (v110== #"\\") then v111=(function() return v21()~=(698 -(208 + 490)) ;end)();elseif (v110==2) then v111=(function() return v24();end)();elseif (v110~= #"asd") then else v111=(function() return v25();end)();end v58[v107]=(function() return v111;end)();break;end end break;end if (v108==0) then v109=(function() return 0;end)();v110=(function() return nil;end)();v108=(function() return 1;end)();end end end v94=(function() return 2;end)();end if (v94==(1 + 1)) then v51=(function() return 2;end)();break;end if (v94==0) then v56=(function() return {v53,v54,nil,v55};end)();v57=(function() return v23();end)();v94=(function() return 1 + 0 ;end)();end end end break;end if (0~=v67) then else if (v51~=(836 -(660 + 176))) then else v52=(function() return function(v99,v100,v101) local v102=(function() return 0 + 0 ;end)();while true do if (v102==(202 -(14 + 188))) then v99[v100-#"[" ]=(function() return v101();end)();return v99,v100,v101;end end end;end)();v53=(function() return {};end)();v54=(function() return {};end)();v55=(function() return {};end)();v51=(function() return 1;end)();end if (v51==(677 -(534 + 141))) then v56[ #"19("]=(function() return v21();end)();for v96= #"~",v23() do local v97=(function() return v21();end)();if (v20(v97, #",", #"|")==(0 + 0)) then local v103=(function() return 0;end)();local v104=(function() return;end)();local v105=(function() return;end)();local v106=(function() return;end)();while true do if (v103~=(2 + 0)) then else if (v20(v105, #".", #"~")== #"!") then v106[2]=(function() return v58[v106[2]];end)();end if (v20(v105,2 + 0 ,3 -1 )~= #">") then else v106[ #"-19"]=(function() return v58[v106[ #"asd"]];end)();end v103=(function() return 4 -1 ;end)();end if (v103~=(8 -5)) then else if (v20(v105, #"91(", #"xxx")~= #"[") then else v106[ #"0836"]=(function() return v58[v106[ #"?id="]];end)();end v53[v96]=(function() return v106;end)();break;end if (v103==(1 + 0)) then local v114=(function() return 0 + 0 ;end)();while true do if (v114==(397 -(115 + 281))) then v103=(function() return 2;end)();break;end if (v114~=(0 -0)) then else v106=(function() return {v22(),v22(),nil,nil};end)();if (v104==(0 -0)) then local v276=(function() return 0 -0 ;end)();local v277=(function() return;end)();while true do if (0~=v276) then else v277=(function() return 867 -(550 + 317) ;end)();while true do if (v277==0) then v106[ #"-19"]=(function() return v22();end)();v106[ #"xnxx"]=(function() return v22();end)();break;end end break;end end elseif (v104== #"\\") then v106[ #"asd"]=(function() return v23();end)();elseif (v104==(2 -0)) then v106[ #"xxx"]=(function() return v23() -((2 -0)^(44 -28)) ;end)();elseif (v104~= #"asd") then else local v383=(function() return 285 -(134 + 151) ;end)();local v384=(function() return;end)();while true do if (v383==(1665 -(970 + 695))) then v384=(function() return 0 -0 ;end)();while true do if (v384~=(1990 -(582 + 1408))) then else v106[ #"-19"]=(function() return v23() -((6 -4)^16) ;end)();v106[ #".dev"]=(function() return v22();end)();break;end end break;end end end v114=(function() return 1 -0 ;end)();end end end if ((0 -0)~=v103) then else v104=(function() return v20(v97,1826 -(1195 + 629) , #"91(");end)();v105=(function() return v20(v97, #".com",6);end)();v103=(function() return 1;end)();end end end end for v98= #">",v23() do v54,v98,v28=(function() return v52(v54,v98,v28);end)();end return v56;end v67=(function() return 1;end)();end end end end local function v29(v59,v60,v61) local v62=v59[1 -0 ];local v63=v59[(1399 -(1074 + 82)) -(187 + 54) ];local v64=v59[783 -(162 + 618) ];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=(1 -0) + 0 ;local v73= -(1 + 0);local v74={};local v75={...};local v76=v12("#",...) -(1 -(0 + 0)) ;local v77={};local v78={};for v86=0 + (1162 -(171 + 991)) ,v76 do if (v86>=v70) then v74[v86-v70 ]=v75[v86 + (1637 -(1373 + 263)) ];else v78[v86]=v75[v86 + (1001 -((1906 -(990 + 465)) + 549)) ];end end local v79=(v76-v70) + 1 + 0 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1 -0 ];if ((2945<=3196) and (v81<=35)) then if (v81<=(27 -10)) then if (v81<=8) then if ((v81<=(1387 -(746 + 638))) or (4770<=1735)) then if ((v81<=(1 + 0)) or (4439<=2350)) then if (v81==(0 -(0 + 0))) then do return;end else local v118=v80[2];local v119={};for v228=342 -(218 + 123) , #v77 do local v229=v77[v228];for v242=(6515 -4934) -(1535 + 46) , #v229 do local v243=0 + 0 ;local v244;local v245;local v246;while true do if ((v243==((0 -0) + (0 -0))) or (4479<4466)) then v244=v229[v242];v245=v244[1 + 0 ];v243=561 -(306 + 254) ;end if (v243==(1 + 0)) then v246=v244[(2 + 1) -1 ];if ((v245==v78) and (v246>=v118)) then v119[v246]=v245[v246];v244[1468 -((3151 -2252) + 568) ]=v119;end break;end end end end end elseif (v81==2) then local v120=v80[2];v78[v120]=v78[v120](v13(v78,v120 + 1 + 0 ,v80[7 -4 ]));else local v122=v80[605 -(268 + 335) ];v78[v122](v78[v122 + (291 -(60 + 224 + 6)) ]);end elseif (v81<=5) then if (v81>4) then local v123=v80[574 -(426 + 146) ];local v124=v78[v123];local v125=v78[v123 + 1 + 1 ];if (v125>0) then if (v124>v78[v123 + (1457 -(282 + 1174)) ]) then v72=v80[3];else v78[v123 + (814 -(569 + 242)) ]=v124;end elseif (v124<v78[v123 + (2 -1) ]) then v72=v80[1 + 2 ];else v78[v123 + (1027 -(706 + 318)) ]=v124;end else v78[v80[1253 -((2079 -1358) + 530) ]]=v78[v80[3]];end elseif (v81<=((2057 -780) -(945 + (1007 -681)))) then v78[v80[(15 -11) -2 ]]=v80[3]~=(0 + (1248 -(111 + 1137))) ;elseif ((2547>1225) and (v81>(707 -((429 -(91 + 67)) + (2155 -(1668 + 58)))))) then local v247=v80[2 + 0 ];do return v78[v247](v13(v78,v247 + ((4467 -2966) -(1408 + 92)) ,v80[1089 -(461 + 625) ]));end else v72=v80[1291 -(993 + (921 -(512 + 114))) ];end elseif ((4671>2674) and (v81<=((2 -1) + 11))) then if (v81<=10) then if (v81>(1180 -(418 + 753))) then if ( not v78[v80[(524 -(423 + 100)) + 1 ]] or (3696<3327)) then v72=v72 + 1 + 0 ;else v72=v80[1 + 2 ];end else v78[v80[(1 -0) + 1 ]]=v61[v80[532 -(406 + 123) ]];end elseif (v81==(1780 -(1749 + 20))) then v78[v80[1 + 1 ]]=v80[1 + 2 ];else v78[v80[2]]=v78[v80[(4610 -3285) -(1249 + (201 -128)) ]][v80[2 + 2 + 0 ]];end elseif (v81<=(1159 -(466 + 679))) then if ((v81==13) or (4542==2970)) then v78[v80[4 -2 ]]=v80[8 -5 ];else local v137=0;local v138;while true do if (v137==(1900 -(106 + (2565 -(326 + 445))))) then v138=v80[1 + 1 ];do return v78[v138](v13(v78,v138 + 1 + (0 -0) ,v80[8 -5 ]));end break;end end end elseif (v81<=(40 -(12 + 13))) then for v230=v80[116 -(4 + 110) ],v80[587 -(57 + 527) ] do v78[v230]=nil;end elseif ((252<=1977) and (v81>(1443 -(41 + 1386)))) then do return;end else v78[v80[105 -(17 + 86) ]]=v78[v80[3 + (0 -0) ]]%v80[1 + 3 ] ;end elseif (v81<=(57 -31)) then if (v81<=(60 -39)) then if (v81<=((161 + 24) -(122 + (148 -104)))) then if (v81==18) then local v139=0 -0 ;local v140;while true do if ((v139==(0 -(1994 -(109 + 1885)))) or (1436==3775)) then v140=v80[2 + 0 ];v78[v140](v13(v78,v140 + 1 + 0 ,v80[5 -2 ]));break;end end else v78[v80[67 -(30 + 35) ]]= #v78[v80[3 + (0 -0) ]];end elseif (v81>((1988 -(530 + 181)) -(1043 + 214))) then local v142=0;local v143;local v144;local v145;while true do if ((v142==(3 -2)) or (1618<930)) then v145=v78[v143 + (1214 -(323 + 889)) ];if (v145>(0 -0)) then if ((4723>4153) and (v144>v78[v143 + (581 -(361 + 219)) ])) then v72=v80[(1792 -(1269 + 200)) -(53 + (511 -244)) ];else v78[v143 + 1 + 2 ]=v144;end elseif (v144<v78[v143 + (414 -(15 + 398)) ]) then v72=v80[3];else v78[v143 + (985 -(18 + 964)) ]=v144;end break;end if (v142==(0 -0)) then v143=v80[817 -(98 + 717) ];v144=v78[v143];v142=827 -(802 + 24) ;end end else v78[v80[2 + 0 ]]=v61[v80[3]];end elseif (v81<=23) then if (v81>(14 + 8)) then local v148=850 -(20 + 830) ;local v149;local v150;local v151;local v152;while true do if (v148==(2 + 0)) then for v311=v149,v73 do v152=v152 + (127 -(116 + 10)) ;v78[v311]=v150[v152];end break;end if (0==v148) then v149=v80[1 + 1 ];v150,v151=v71(v78[v149](v13(v78,v149 + (739 -(542 + 196)) ,v73)));v148=1;end if ((v148==1) or (3654>=4654)) then v73=(v151 + v149) -(1 -0) ;v152=0 + 0 ;v148=(883 -(614 + 267)) + 0 ;end end else v78[v80[1 + 1 ]]=v80[3]~=((0 -0) -0) ;end elseif ((951<=1496) and (v81<=(61 -37))) then for v232=v80[2],v80[1554 -(1126 + 425) ] do v78[v232]=nil;end elseif (v81==(430 -(118 + (319 -(19 + 13))))) then v72=v80[11 -8 ];else v78[v80[2]]={};end elseif (v81<=((1453 -302) -(118 + 1003))) then if (v81<=28) then if ((v81==((126 -48) -51)) or (1736==571)) then v78[v80[2]]=v78[v80[(57 + 323) -(142 + 235) ]]%v78[v80[18 -(32 -18) ]] ;else local v155=v80[1 + 1 ];local v156=v78[v155 + ((2796 -1817) -(553 + 424)) ];local v157=v78[v155] + v156 ;v78[v155]=v157;if (v156>(0 -0)) then if (v157<=v78[v155 + 1 + 0 ]) then local v314=0;while true do if (v314==(0 + 0)) then v72=v80[3];v78[v155 + 2 + 1 ]=v157;break;end end end elseif (v157>=v78[v155 + 1 ]) then v72=v80[2 + 1 + 0 ];v78[v155 + 3 ]=v157;end end elseif ((v81>(17 + 12)) or (896>4769)) then v78[v80[2]][v80[6 -3 ]]=v78[v80[11 -7 ]];else v78[v80[4 -2 ]][v80[1 + (3 -1) ]]=v78[v80[19 -(31 -16) ]];end elseif (v81<=(785 -(184 + 55 + 514))) then if (v81==(11 + 20)) then v78[v80[(219 + 1112) -(797 + 532) ]]();else v78[v80[2 + 0 ]]=v60[v80[2 + 1 ]];end elseif ((v81<=((154 -78) -43)) or (1045<=1020)) then local v165=0 -0 ;local v166;local v167;while true do if (v165==(1202 -(373 + 829))) then v166=v80[733 -(476 + 255) ];v167=v78[v80[(245 + 888) -((1026 -657) + 761) ]];v165=1 + 0 ;end if (v165==((1 -0) -0)) then v78[v166 + (4 -3) ]=v167;v78[v166]=v167[v80[7 -3 ]];break;end end elseif ((v81>(272 -(64 + 174))) or (1160<=328)) then v78[v80[1 + 1 ]]= #v78[v80[(9 -6) -0 ]];else local v254=336 -(144 + (452 -260)) ;local v255;while true do if (v254==((78 + 138) -(42 + 174))) then v255=v80[2 + 0 + 0 ];v78[v255](v13(v78,v255 + 1 + 0 ,v73));break;end end end elseif (v81<=53) then if (v81<=(19 + 25)) then if (v81<=39) then if ((3808>2924) and (v81<=(1541 -(363 + 1141)))) then if (v81==(30 + 6)) then if (v78[v80[(1151 + 431) -(1183 + 397) ]]==v80[11 -(4 + 3) ]) then v72=v72 + 1 + 0 ;else v72=v80[2 + 1 + (1433 -(797 + 636)) ];end else v78[v80[(404 + 1573) -((4444 -2531) + 62) ]]=v80[2 + 1 ] + v78[v80[4]] ;end elseif (v81==(100 -62)) then local v169=1933 -((2743 -2178) + 1368) ;local v170;local v171;local v172;local v173;while true do if (v169==1) then v73=(v172 + v170) -(3 -2) ;v173=1661 -(1477 + 184) ;v169=2 -0 ;end if (v169==((1619 -(1427 + 192)) + 0)) then v170=v80[858 -(564 + 292) ];v171,v172=v71(v78[v170](v13(v78,v170 + (1 -0) ,v80[8 -5 ])));v169=1;end if (v169==(306 -(244 + 60))) then for v317=v170,v73 do v173=v173 + 1 + 0 ;v78[v317]=v171[v173];end break;end end else local v174=v80[1 + 1 ];v78[v174]=v78[v174](v13(v78,v174 + (477 -(14 + 27 + 435)) ,v80[(628 + 376) -(938 + 63) ]));end elseif (v81<=(32 + 9)) then if (v81==(1165 -(936 + (1285 -(709 + 387))))) then if  not v78[v80[1 + 1 ]] then v72=v72 + 1 ;else v72=v80[1616 -((3633 -2068) + 48) ];end else local v176=(1858 -(673 + 1185)) + 0 + 0 ;local v177;while true do if (v176==((3300 -2162) -(782 + 356))) then v177=v80[269 -(176 + (292 -201)) ];v78[v177](v78[v177 + 1 ]);break;end end end elseif (v81<=(108 -(30 + 36))) then v78[v80[2 -(0 -0) ]]=v78[v80[1095 -(975 + 117) ]]%v80[3 + 1 ] ;elseif (v81==(369 -(192 + 134))) then v78[v80[1877 -(157 + 1718) ]]=v78[v80[3 + 0 ]] + v80[14 -10 ] ;else v78[v80[6 -(1280 -(316 + 960)) ]]=v80[1021 -(697 + 321) ] + v78[v80[(8 + 2) -6 ]] ;end elseif (v81<=(101 -53)) then if (v81<=46) then if (v81==(103 -58)) then local v179=v80[1 + 1 ];local v180=v78[v179 + (3 -1) ];local v181=v78[v179] + v180 ;v78[v179]=v181;if (v180>0) then if (v181<=v78[v179 + (2 -1) ]) then v72=v80[1230 -(322 + 905) ];v78[v179 + ((828 -214) -(602 + 6 + 3)) ]=v181;end elseif (v181>=v78[v179 + (1190 -(347 + 102 + 740)) ]) then v72=v80[875 -(826 + 46) ];v78[v179 + (950 -(245 + 702)) ]=v181;end else local v183=0 -0 ;local v184;local v185;while true do if (v183==0) then v184=v80[1 + 1 ];v185=v78[v80[1901 -(241 + 19 + (6261 -4623)) ]];v183=(992 -(83 + 468)) -(382 + 58) ;end if ((3891<4919) and (v183==((1809 -(1202 + 604)) -(1 + 1)))) then v78[v184 + 1 + 0 ]=v185;v78[v184]=v185[v80[(37 -29) -4 ]];break;end end end elseif (v81==(139 -92)) then v78[v80[1207 -(902 + 303) ]]=v60[v80[5 -2 ]];else v78[v80[4 -2 ]]=v78[v80[1 + 2 ]] + v80[1694 -((1865 -744) + (1134 -565)) ] ;end elseif (v81<=(98 -48)) then if ((v81==(263 -(22 + (531 -339)))) or (2234<=1502)) then local v189=(2563 -(446 + 1434)) -(483 + 200) ;local v190;local v191;local v192;while true do if ((v189==(1464 -(1404 + 59))) or (2512<432)) then v192={};v191=v10({},{__index=function(v324,v325) local v326=v192[v325];return v326[2 -1 ][v326[2 -0 ]];end,__newindex=function(v327,v328,v329) local v330=v192[v328];v330[766 -(468 + 297) ][v330[564 -(334 + 228) ]]=v329;end});v189=6 -4 ;end if (v189==(4 -2)) then for v332=1 -(1283 -(1040 + 243)) ,v80[2 + 2 ] do local v333=0;local v334;while true do if ((v333==(237 -(141 + 95))) or (1848==865)) then if (v334[1 + (0 -0) ]==(9 -5)) then v192[v332-(2 -1) ]={v78,v334[3 + 0 ]};else v192[v332-1 ]={v60,v334[4 -1 ]};end v77[ #v77 + 1 ]=v192;break;end if ((v333==0) or (4682<=4541)) then v72=v72 + 1 + 0 ;v334=v68[v72];v333=164 -(92 + 71) ;end end end v78[v80[1 + 1 + 0 ]]=v29(v190,v191,v61);break;end if ((v189==(0 + 0)) or (3026>=4046)) then v190=v69[v80[(2 + 2) -(1848 -(559 + 1288)) ]];v191=nil;v189=(2697 -(609 + 1322)) -(574 + (645 -(13 + 441))) ;end end else local v193=0 + 0 ;local v194;local v195;local v196;while true do if (v193==(2 -1)) then v196={};v195=v10({},{__index=function(v335,v336) local v337=0 + 0 ;local v338;while true do if (v337==(849 -(254 + 595))) then v338=v196[v336];return v338[127 -(55 + 71) ][v338[2 -0 ]];end end end,__newindex=function(v339,v340,v341) local v342=1790 -(573 + 1217) ;local v343;while true do if ((2008>638) and (0==v342)) then v343=v196[v340];v343[1 + 0 ][v343[5 -3 ]]=v341;break;end end end});v193=1 + 1 ;end if (v193==(2 -0)) then for v344=(1740 -800) -((3556 -2842) + (2136 -(340 + 1571))) ,v80[(1 + 10) -7 ] do v72=v72 + (1 -0) ;local v345=v68[v72];if (v345[1]==4) then v196[v344-(1 + 0) ]={v78,v345[51 -(25 + 23) ]};else v196[v344-1 ]={v60,v345[10 -7 ]};end v77[ #v77 + 1 ]=v196;end v78[v80[734 -(16 + 716) ]]=v29(v194,v195,v61);break;end if (v193==((0 -0) -0)) then v194=v69[v80[(55 + 45) -(11 + (157 -71)) ]];v195=nil;v193=1;end end end elseif (v81<=51) then local v197=v80[4 -2 ];v78[v197](v13(v78,v197 + (286 -(175 + 110)) ,v80[2 + 1 ]));elseif (v81==((59 + 71) -78)) then local v260=v80[2];v78[v260]=v78[v260](v13(v78,v260 + (4 -3) ,v73));else local v262=v80[2];v78[v262]=v78[v262]();end elseif (v81<=62) then if (v81<=(1853 -(503 + 1293))) then if (v81<=55) then if (v81>(150 -96)) then v78[v80[2 + 0 ]]=v78[v80[3]];elseif (v78[v80[2 -0 ]]==v80[(593 + 472) -(810 + 251) ]) then v72=v72 + 1 + 0 ;else v72=v80[1 + 2 + 0 ];end elseif ((1775<=3233) and (v81>(51 + 5))) then local v200=v80[535 -(43 + 476 + 14) ];do return v13(v78,v200,v73);end else local v201=0;local v202;local v203;local v204;local v205;while true do if ((v201==((617 + 117) -(711 + 22 + 0))) or (4543==1997)) then v73=(v204 + v202) -1 ;v205=(433 -(153 + 280)) -0 ;v201=861 -(240 + (1787 -1168)) ;end if (((0 + 0)==v201) or (3102<728)) then v202=v80[2 -0 ];v203,v204=v71(v78[v202](v78[v202 + 1 ]));v201=(513 -(409 + 103)) + 0 ;end if ((345==345) and (v201==(1746 -((1580 -(46 + 190)) + 400)))) then for v347=v202,v73 do local v348=405 -(255 + 150) ;while true do if (v348==(0 + 0)) then v205=v205 + 1 ;v78[v347]=v203[v205];break;end end end break;end end end elseif ((v81<=59) or (2827<378)) then if (v81>(32 + (121 -(51 + 44)))) then local v206=v80[8 -6 ];v78[v206]=v78[v206]();else local v208=v80[2];local v209,v210=v71(v78[v208](v78[v208 + 1 ]));v73=(v210 + v208) -((2 + 1) -2) ;local v211=(1579 + 160) -(404 + 1335) ;for v234=v208,v73 do v211=v211 + (407 -(183 + 223)) ;v78[v234]=v209[v211];end end elseif (v81<=60) then local v212=0;local v213;while true do if (0==v212) then v213=v80[2 + 0 ];v78[v213]=v78[v213](v13(v78,v213 + (1 -0) ,v73));break;end end elseif (v81>61) then v78[v80[2 + 0 ]]=v78[v80[2 + 1 ]][v80[5 -1 ]];else local v267=v80[2];v78[v267](v13(v78,v267 + (338 -(10 + 327)) ,v73));end elseif ((v81<=(46 + 20)) or (3476<2597)) then if (v81<=(402 -(34 + 84 + (1537 -(1114 + 203))))) then if (v81==(13 + 8 + 42)) then v78[v80[451 -(108 + 341) ]]=v78[v80[3]]%v78[v80[2 + (669 -(89 + 578)) ]] ;else local v215=v80[8 -6 ];do return v13(v78,v215,v73);end end elseif ((3079<4794) and (v81==65)) then v78[v80[2]][v80[1496 -(711 + 782) ]]=v80[7 -3 ];else local v218=v80[(337 + 134) -((561 -291) + 199) ];local v219={};for v237=1 + 0 , #v77 do local v238=v77[v237];for v268=1819 -(580 + 1239) , #v238 do local v269=v238[v268];local v270=v269[1];local v271=v269[5 -(1052 -(572 + 477)) ];if ((4854>4464) and (v270==v78) and (v271>=v218)) then local v349=0;while true do if (((0 + 0 + 0)==v349) or (4912==3758)) then v219[v271]=v270[v271];v269[1 + 0 ]=v219;break;end end end end end end elseif ((126<=3482) and (v81<=((756 -(228 + 498)) + 38))) then if (v81==(174 -107)) then v78[v80[2]]={};else v78[v80[2 + 0 ]][v80[1170 -(645 + 522) ]]=v80[1794 -(1010 + 169 + 611) ];end elseif ((v81<=(69 + 0)) or (2374==4374)) then local v223=0;local v224;local v225;local v226;local v227;while true do if (v223==(0 -(0 + 0))) then v224=v80[5 -(1 + 2) ];v225,v226=v71(v78[v224](v13(v78,v224 + (1837 -(1045 + 791)) ,v80[2 + 1 ])));v223=(665 -(174 + 489)) -1 ;end if ((1575==1575) and (v223==(2 -0))) then for v350=v224,v73 do local v351=505 -(351 + 154) ;while true do if ((1574 -(1281 + (482 -189)))==v351) then v227=v227 + (267 -(21 + 7 + 238)) ;v78[v350]=v225[v227];break;end end end break;end if ((v223==(2 -(2 -1))) or (2234==1455)) then v73=(v226 + v224) -(1560 -(1381 + (2083 -(830 + 1075)))) ;v227=0 + 0 ;v223=2 + 0 ;end end elseif ((v81>(30 + 40)) or (1067>1779)) then local v272=v80[2];local v273,v274=v71(v78[v272](v13(v78,v272 + ((527 -(303 + 221)) -2) ,v73)));v73=(v274 + v272) -(1 + 0) ;local v275=(1739 -(231 + 1038)) -(381 + 89) ;for v304=v272,v73 do v275=v275 + 1 + 0 ;v78[v304]=v273[v275];end else v78[v80[2 + 0 ]]();end v72=v72 + (1 -0) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
